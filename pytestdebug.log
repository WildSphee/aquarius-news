versions pytest-8.2.2, python-3.10.12.final.0
invocation_dir=/home/reagan/MAS-newsletter
cwd=/home/reagan/MAS-newsletter
args=('tests/test_smtp.py', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x79ab3f4974f0>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x79ab3f4974f0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x79ab3f080730>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x79ab3f0808b0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
          plugin_name: 133776415933440
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x79ab3f4974f0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/anyio/pytest_plugin.py'>
          plugin_name: anyio
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x79ab3f080730>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x79ab3f0808b0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x79ab3f080af0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x79ab3f0820e0>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
          plugin_name: 133776415933440
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x79ab3f4974f0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/anyio/pytest_plugin.py'>
          plugin_name: anyio
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x79ab3f080730>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x79ab3f0808b0>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x79ab3f080af0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x79ab3f0820e0>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x79ab3f0825c0>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x79ab3fc04400>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x79ab3f4974f0>
          start_path: /home/reagan/MAS-newsletter
          startdir: /home/reagan/MAS-newsletter
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      finish pytest_report_header --> [['rootdir: /home/reagan/MAS-newsletter', 'configfile: pyproject.toml', 'plugins: anyio-4.4.0'], ['using: pytest-8.2.2', 'setuptools registered plugins:', '  anyio-4.4.0 at /home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/anyio/pytest_plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['tests/test_smtp.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=PosixPath('/home/reagan/MAS-newsletter/tests/test_smtp.py'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: /home/reagan/MAS-newsletter
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir MAS-newsletter> [hook]
            pytest_collectstart [hook]
                collector: <Dir MAS-newsletter>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir MAS-newsletter>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/.cache
                  path: /home/reagan/MAS-newsletter/.cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/.env
                  path: /home/reagan/MAS-newsletter/.env
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir MAS-newsletter>
                  file_path: /home/reagan/MAS-newsletter/.env
                  path: /home/reagan/MAS-newsletter/.env
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/.git
                  path: /home/reagan/MAS-newsletter/.git
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/.gitignore
                  path: /home/reagan/MAS-newsletter/.gitignore
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir MAS-newsletter>
                  file_path: /home/reagan/MAS-newsletter/.gitignore
                  path: /home/reagan/MAS-newsletter/.gitignore
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/.mypy_cache
                  path: /home/reagan/MAS-newsletter/.mypy_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/.pytest_cache
                  path: /home/reagan/MAS-newsletter/.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/.ruff_cache
                  path: /home/reagan/MAS-newsletter/.ruff_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/.venv
                  path: /home/reagan/MAS-newsletter/.venv
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/LICENSE.md
                  path: /home/reagan/MAS-newsletter/LICENSE.md
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir MAS-newsletter>
                  file_path: /home/reagan/MAS-newsletter/LICENSE.md
                  path: /home/reagan/MAS-newsletter/LICENSE.md
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/OAI_CONFIG_LIST
                  path: /home/reagan/MAS-newsletter/OAI_CONFIG_LIST
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir MAS-newsletter>
                  file_path: /home/reagan/MAS-newsletter/OAI_CONFIG_LIST
                  path: /home/reagan/MAS-newsletter/OAI_CONFIG_LIST
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/README.md
                  path: /home/reagan/MAS-newsletter/README.md
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir MAS-newsletter>
                  file_path: /home/reagan/MAS-newsletter/README.md
                  path: /home/reagan/MAS-newsletter/README.md
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/aquarius
                  path: /home/reagan/MAS-newsletter/aquarius
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/reagan/MAS-newsletter/aquarius
                  parent: <Dir MAS-newsletter>
              finish pytest_collect_directory --> <Dir aquarius> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/poetry.lock
                  path: /home/reagan/MAS-newsletter/poetry.lock
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir MAS-newsletter>
                  file_path: /home/reagan/MAS-newsletter/poetry.lock
                  path: /home/reagan/MAS-newsletter/poetry.lock
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/pyproject.toml
                  path: /home/reagan/MAS-newsletter/pyproject.toml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir MAS-newsletter>
                  file_path: /home/reagan/MAS-newsletter/pyproject.toml
                  path: /home/reagan/MAS-newsletter/pyproject.toml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/pytestdebug.log
                  path: /home/reagan/MAS-newsletter/pytestdebug.log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir MAS-newsletter>
                  file_path: /home/reagan/MAS-newsletter/pytestdebug.log
                  path: /home/reagan/MAS-newsletter/pytestdebug.log
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/scripts
                  path: /home/reagan/MAS-newsletter/scripts
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/reagan/MAS-newsletter/scripts
                  parent: <Dir MAS-newsletter>
              finish pytest_collect_directory --> <Dir scripts> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/testing
                  path: /home/reagan/MAS-newsletter/testing
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /home/reagan/MAS-newsletter/testing
                  parent: <Dir MAS-newsletter>
              finish pytest_collect_directory --> <Dir testing> [hook]
              pytest_collect_directory [hook]
                  path: /home/reagan/MAS-newsletter/tests
                  parent: <Dir MAS-newsletter>
              finish pytest_collect_directory --> <Dir tests> [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=4 outcome='passed'> [hook]
            pytest_collectstart [hook]
                collector: <Dir tests>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir tests>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x79ab3f4974f0>
                  collection_path: /home/reagan/MAS-newsletter/tests/__pycache__
                  path: /home/reagan/MAS-newsletter/tests/__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_collect_file [hook]
                  parent: <Dir tests>
                  file_path: /home/reagan/MAS-newsletter/tests/test_smtp.py
                  path: /home/reagan/MAS-newsletter/tests/test_smtp.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir tests>
                    module_path: /home/reagan/MAS-newsletter/tests/test_smtp.py
                    path: /home/reagan/MAS-newsletter/tests/test_smtp.py
                finish pytest_pycollect_makemodule --> <Module test_smtp.py> [hook]
              finish pytest_collect_file --> [<Module test_smtp.py>] [hook]
            finish pytest_make_collect_report --> <CollectReport 'tests' lenresult=1 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module test_smtp.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_smtp.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_smtp.py>
      find_module called for: test_smtp [assertion]
      matched test file (was specified on cmdline): '/home/reagan/MAS-newsletter/tests/test_smtp.py' [assertion]
      found cached rewritten pyc for /home/reagan/MAS-newsletter/tests/test_smtp.py [assertion]
      early skip of rewriting module: smtplib [assertion]
      early skip of rewriting module: email.generator [assertion]
      early skip of rewriting module: hmac [assertion]
      early skip of rewriting module: _hashlib [assertion]
      early skip of rewriting module: hashlib [assertion]
      early skip of rewriting module: _blake2 [assertion]
      early skip of rewriting module: unittest.mock [assertion]
      early skip of rewriting module: asyncio [assertion]
      early skip of rewriting module: asyncio.base_events [assertion]
      early skip of rewriting module: asyncio.constants [assertion]
      early skip of rewriting module: asyncio.coroutines [assertion]
      early skip of rewriting module: asyncio.base_futures [assertion]
      early skip of rewriting module: asyncio.format_helpers [assertion]
      early skip of rewriting module: asyncio.log [assertion]
      early skip of rewriting module: asyncio.events [assertion]
      early skip of rewriting module: _asyncio [assertion]
      early skip of rewriting module: asyncio.exceptions [assertion]
      early skip of rewriting module: asyncio.base_tasks [assertion]
      early skip of rewriting module: asyncio.futures [assertion]
      early skip of rewriting module: asyncio.protocols [assertion]
      early skip of rewriting module: asyncio.sslproto [assertion]
      early skip of rewriting module: asyncio.transports [assertion]
      early skip of rewriting module: asyncio.staggered [assertion]
      early skip of rewriting module: asyncio.locks [assertion]
      early skip of rewriting module: asyncio.mixins [assertion]
      early skip of rewriting module: asyncio.tasks [assertion]
      early skip of rewriting module: asyncio.trsock [assertion]
      early skip of rewriting module: asyncio.runners [assertion]
      early skip of rewriting module: asyncio.queues [assertion]
      early skip of rewriting module: asyncio.streams [assertion]
      early skip of rewriting module: asyncio.subprocess [assertion]
      early skip of rewriting module: asyncio.threads [assertion]
      early skip of rewriting module: asyncio.unix_events [assertion]
      early skip of rewriting module: asyncio.base_subprocess [assertion]
      early skip of rewriting module: asyncio.selector_events [assertion]
      early skip of rewriting module: aquarius [assertion]
      early skip of rewriting module: aquarius.schemas [assertion]
      early skip of rewriting module: aquarius.schemas.exceptions [assertion]
      early skip of rewriting module: loguru [assertion]
      early skip of rewriting module: loguru._defaults [assertion]
      early skip of rewriting module: loguru._logger [assertion]
      early skip of rewriting module: multiprocessing [assertion]
      early skip of rewriting module: multiprocessing.context [assertion]
      early skip of rewriting module: multiprocessing.process [assertion]
      early skip of rewriting module: multiprocessing.reduction [assertion]
      early skip of rewriting module: pickle [assertion]
      early skip of rewriting module: _compat_pickle [assertion]
      early skip of rewriting module: _pickle [assertion]
      early skip of rewriting module: org [assertion]
      early skip of rewriting module: loguru._asyncio_loop [assertion]
      early skip of rewriting module: loguru._colorama [assertion]
      early skip of rewriting module: loguru._filters [assertion]
      early skip of rewriting module: loguru._better_exceptions [assertion]
      early skip of rewriting module: sysconfig [assertion]
      early skip of rewriting module: loguru._colorizer [assertion]
      early skip of rewriting module: loguru._contextvars [assertion]
      early skip of rewriting module: loguru._datetime [assertion]
      early skip of rewriting module: loguru._error_interceptor [assertion]
      early skip of rewriting module: loguru._file_sink [assertion]
      early skip of rewriting module: loguru._string_parsers [assertion]
      early skip of rewriting module: loguru._ctime_functions [assertion]
      early skip of rewriting module: loguru._get_frame [assertion]
      early skip of rewriting module: loguru._handler [assertion]
      early skip of rewriting module: loguru._locks_machinery [assertion]
      early skip of rewriting module: loguru._recattrs [assertion]
      early skip of rewriting module: loguru._simple_sinks [assertion]
      early skip of rewriting module: ipykernel [assertion]
      early skip of rewriting module: _sysconfigdata__x86_64-linux-gnu [assertion]
      early skip of rewriting module: aquarius.smtp [assertion]
      early skip of rewriting module: dotenv [assertion]
      early skip of rewriting module: dotenv.main [assertion]
      early skip of rewriting module: dotenv.parser [assertion]
      early skip of rewriting module: dotenv.variables [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: os
            obj: <module 'os' from '/usr/lib/python3.10/os.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: smtplib
            obj: <module 'smtplib' from '/usr/lib/python3.10/smtplib.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: MagicMock
            obj: <class 'unittest.mock.MagicMock'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: patch
            obj: <function patch at 0x79ab3eba0d30>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: pytest
            obj: <module 'pytest' from '/home/reagan/MAS-newsletter/.venv/lib/python3.10/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: CustomError
            obj: <class 'aquarius.schemas.exceptions.CustomError'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: send_mail
            obj: <function send_mail at 0x79ab3ea35900>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: test_send_mail_success
            obj: <function test_send_mail_success at 0x79ab3f0a9d80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79ab3ea44100>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_send_mail_success>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: test_send_mail_failure
            obj: <function test_send_mail_failure at 0x79ab3ea71630>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79ab3ea45c90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_send_mail_failure>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: test_send_mail_no_password
            obj: <function test_send_mail_no_password at 0x79ab3ea716c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79ab3ea45bd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_send_mail_no_password>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_smtp.py>
            name: test_send_mail_exception
            obj: <function test_send_mail_exception at 0x79ab3ea717e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x79ab3ea44100>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_send_mail_exception>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_smtp.py' lenresult=4 outcome='passed'> [hook]
    genitems <Function test_send_mail_success> [collection]
      pytest_itemcollected [hook]
          item: <Function test_send_mail_success>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_send_mail_failure> [collection]
      pytest_itemcollected [hook]
          item: <Function test_send_mail_failure>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_send_mail_no_password> [collection]
      pytest_itemcollected [hook]
          item: <Function test_send_mail_no_password>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_send_mail_exception> [collection]
      pytest_itemcollected [hook]
          item: <Function test_send_mail_exception>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_smtp.py' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x79ab3f4974f0>
          items: [<Function test_send_mail_success>, <Function test_send_mail_failure>, <Function test_send_mail_no_password>, <Function test_send_mail_exception>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x79ab3f4974f0>
            items: [<Function test_send_mail_success>, <Function test_send_mail_failure>, <Function test_send_mail_no_password>, <Function test_send_mail_exception>]
            start_path: /home/reagan/MAS-newsletter
            startdir: /home/reagan/MAS-newsletter
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=4>
      pytest_runtest_protocol [hook]
          item: <Function test_send_mail_success>
          nextitem: <Function test_send_mail_failure>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_smtp.py::test_send_mail_success
            location: ('tests/test_smtp.py', 10, 'test_send_mail_success')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_send_mail_success>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='monkeypatch' scope='function' baseid=''>
              request: <SubRequest 'monkeypatch' for <Function test_send_mail_success>>
          finish pytest_fixture_setup --> <_pytest.monkeypatch.MonkeyPatch object at 0x79ab3ea46530> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_success>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_success' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_success' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_success' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_send_mail_success>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_send_mail_success>
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_success>
            call: <CallInfo when='call' excinfo=<ExceptionInfo ModuleNotFoundError("No module named 'aquarius.smtp.send_mail'; 'aquarius.smtp' is not a package") tblen=40>>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_success' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_success' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_success' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_send_mail_success>
            call: <CallInfo when='call' excinfo=<ExceptionInfo ModuleNotFoundError("No module named 'aquarius.smtp.send_mail'; 'aquarius.smtp' is not a package") tblen=40>>
            report: <TestReport 'tests/test_smtp.py::test_send_mail_success' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_send_mail_success>
            nextitem: <Function test_send_mail_failure>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='monkeypatch' scope='function' baseid=''>
              request: <SubRequest 'monkeypatch' for <Function test_send_mail_success>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_success>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_success' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_success' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_success' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_smtp.py::test_send_mail_success
            location: ('tests/test_smtp.py', 10, 'test_send_mail_success')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_send_mail_failure>
          nextitem: <Function test_send_mail_no_password>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_smtp.py::test_send_mail_failure
            location: ('tests/test_smtp.py', 31, 'test_send_mail_failure')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_send_mail_failure>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_failure>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_failure' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_failure' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_failure' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_send_mail_failure>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_send_mail_failure>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_failure>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_failure' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_failure' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_failure' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_send_mail_failure>
            nextitem: <Function test_send_mail_no_password>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_failure>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_failure' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_failure' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_failure' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_smtp.py::test_send_mail_failure
            location: ('tests/test_smtp.py', 31, 'test_send_mail_failure')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_send_mail_no_password>
          nextitem: <Function test_send_mail_exception>
        pytest_runtest_logstart [hook]
            nodeid: tests/test_smtp.py::test_send_mail_no_password
            location: ('tests/test_smtp.py', 43, 'test_send_mail_no_password')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_send_mail_no_password>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='monkeypatch' scope='function' baseid=''>
              request: <SubRequest 'monkeypatch' for <Function test_send_mail_no_password>>
          finish pytest_fixture_setup --> <_pytest.monkeypatch.MonkeyPatch object at 0x79ab3e950b50> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_no_password>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_no_password' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_no_password' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_no_password' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_send_mail_no_password>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_send_mail_no_password>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_no_password>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_no_password' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_no_password' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_no_password' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_send_mail_no_password>
            nextitem: <Function test_send_mail_exception>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='monkeypatch' scope='function' baseid=''>
              request: <SubRequest 'monkeypatch' for <Function test_send_mail_no_password>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_no_password>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_no_password' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_no_password' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_no_password' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_smtp.py::test_send_mail_no_password
            location: ('tests/test_smtp.py', 43, 'test_send_mail_no_password')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_send_mail_exception>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: tests/test_smtp.py::test_send_mail_exception
            location: ('tests/test_smtp.py', 51, 'test_send_mail_exception')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_send_mail_exception>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_exception>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_exception' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_exception' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_exception' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_send_mail_exception>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_send_mail_exception>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_exception>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_exception' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_exception' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_exception' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_send_mail_exception>
            nextitem: None
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_send_mail_exception>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_smtp.py::test_send_mail_exception' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_exception' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_smtp.py::test_send_mail_exception' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x79ab3f4974f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_smtp.py::test_send_mail_exception
            location: ('tests/test_smtp.py', 51, 'test_send_mail_exception')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=1 testscollected=4>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x79ab3f080af0>
          exitstatus: 1
          config: <_pytest.config.Config object at 0x79ab3f4974f0>
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/test_smtp.py::test_send_mail_success' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x79ab3f4974f0>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x79ab3f4974f0>
    finish pytest_unconfigure --> [] [hook]
